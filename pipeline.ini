##########################################################
##########################################################
##########################################################
## Default configuration file for pipeline_testing
##########################################################
[general]

projectname=CGAT Pipelines Regression Tests
copyright=CGAT
version=1.0  
release=""  

data_url=http://www.cgat.org/downloads/public/cgat/pipeline_test_data

## Directory with test data and configurations
data_dir=/ifs/devel/pipelines/data

## default options for the pipeline scripts
pipeline_options=-v 5 -p 10 --is-test

# prerequisite pipelines
# comma-separated list of pipelines that are required
# for the below tests to run. Currently it is only annotations
# and it is downloaded and upacked but not re-run
prerequisites=prereq_annotations

# comma-separated list of file suffixes that are to be included in the
# regression test. Compressed files are automatically added, i.e. it is
# sufficient to add bed, as bed.gz will be added.
suffixes=bam,tsv,fa,fasta,bed,gtf,gff,psl,vcf,stats,txt

################################################################
# Tests to be run.
#
# Each section starting with a the prefix 'test_' is a test to
# be run. By default, the name of the pipeline to use is given
# by whatever follows the prefix 'test_' but can be set explicitly
# with 'pipeline' option, for example:
#
# [test_maponmouse]
# pipeline=pipeline_mapping
#
# [test_maponhuman]
# pipeline=pipeline_mapping
#
# Each test requires a tar-ball with the data at the location
# of the URL. The data should extract into a directory called
# <name of the test>.dir, for example: test_maponmouse.dir,
# test_maponhuman.dir, etc.
# 
# Other options that can be set:
#
# target - pipeline target to run, default = "full"
#
# suffixes - list of file suffixes that should be added to the 
#            the general list of suffixes
#
# regex_linecount - regular expression matching files to count lines.
#                   This is a comma-separated list.
#
# regex_exist - regular expression matching files to check if they were created.
#               This is a comma-separated list.
#
# regex_ignore - regular expression matching files which should be completely
#                ignored. This is a comma-separated list and only use at
#		 solution of last resort.
#
# The latter three options are useful when a checksum varies
# in consecutive runs e.g. due to timestamps in log files.
#
# Note that regular expression are supposed to match the suffix of
# a file path.

[test_ancestral_repeats]
suffixes=overlaps

# rates might vary due to random initialization
regex_exist=rates.gff.gz

[test_annotations]
# build only targets that don't depent much on downloading data
# then run summary
# fasta: don't do, because requires downloaded table transcript_info
target=assembly,geneset,annotations,ucsc,summary
					 
[test_enrichment]
# for the enrichment pipeline, only test files ending in result.tsv
regex_exist=.*tsv
# as regex'es are usually a list of files to be ignore, a positive look-behind
# assertion is required
regex_ignore=(?<=results).tsv

[test_exome]
target=variantAnnotator

suffixes=idx,list

regex_linecount=chr.*picard_stats

regex_exist=chr.*bai

[test_geneinfo]
suffixes=load
regex_linecount=all.*tsv

regex_exist=ensemblg.*tsv,ensemblg.*load,.*details.*load,.*ont.*load

[test_intervals]
regex_linecount=gat.*tsv.gz,transcriptprofile.tsv.gz$,meme.txt$

[test_mapping]
suffixes=nreads

# gtf files have different sort order on jenkins
# AH: bowtie contextstats values fluctuate, not sure why
regex_linecount=reference.gtf.gz,refcoding.gtf.gz,bowtie.contextstats.tsv.gz,star_stats.tsv$,picard_stats$,bam$

[test_peakcalling]
regex_exist=peakranger.summits.bed.gz,peakranger.peaks.bed.gz,peakranger_region.bed$,peakranger_summit.bed$

[test_readqc]
# fastqc_data.tx: floating point differences in the duplication
# section prevents exact comparison
#
# _screen.txt$: sort order differs
regex_linecount=fastqc_data.txt,_screen.txt$

[test_rnaseqdiffexpression]
regex_linecount=_results.tsv,_expression.tsv.gz

[test_rnaseqqc]
# The experiment contains the project name, which is different depending
# on location.
# In the genesets, the p_id is not set consistently, seems to be a random
# ordering issue.
# The context stats fluctuate, might an assignment issue where one interval
# is assigned randomly to equally well matching intervals.
regex_linecount=experiment.tsv,reference.gtf.gz,refcoding.gtf.gz,hisat.dir\/.*tsv.gz,ref.*.gtf.gz,names.tsv.gz,bam$,coding_exons.gtf.gz

[test_scrnaseqqc]
regex_md5=ercc.tsv.summary,clean

[test_windows]
regex_linecount=.*_counts_l2foldchange_.*.tsv.gz,design.*.tsv.gz,genomic.covered.tsv.gz
regex_exists=windows.stats$

# [test_timeseries]
# regex_md5=tsv.gz|tsv
#
# regex_linecount=distance.tsv|.*-expression.tsv|.*-eigengene_loadings.tsv|.*-diff-cond.tsv|.*-time.tsv

###############################################################
[report]
# number of threads to use to build the documentation
threads=1

# directory for html documentation
html=report/html

# directory for doctrees
doctrees=report/doctrees

# prefix for publishing
prefix=default

# engine to use for building report
engine=cgatreport
